// Copyright The Kubernetes Authors.
// SPDX-FileCopyrightText: (C) 2025 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "/build/apis/servicegroup.tsm.tanzu.vmware.com/v1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SvcGroupLister helps list SvcGroups.
// All objects returned here must be treated as read-only.
type SvcGroupLister interface {
	// List lists all SvcGroups in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.SvcGroup, err error)
	// Get retrieves the SvcGroup from the index for a given name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.SvcGroup, error)
	SvcGroupListerExpansion
}

// svcGroupLister implements the SvcGroupLister interface.
type svcGroupLister struct {
	indexer cache.Indexer
}

// NewSvcGroupLister returns a new SvcGroupLister.
func NewSvcGroupLister(indexer cache.Indexer) SvcGroupLister {
	return &svcGroupLister{indexer: indexer}
}

// List lists all SvcGroups in the indexer.
func (s *svcGroupLister) List(selector labels.Selector) (ret []*v1.SvcGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.SvcGroup))
	})
	return ret, err
}

// Get retrieves the SvcGroup from the index for a given name.
func (s *svcGroupLister) Get(name string) (*v1.SvcGroup, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("svcgroup"), name)
	}
	return obj.(*v1.SvcGroup), nil
}
