# SPDX-FileCopyrightText: 2025 Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0
---

global:
  name: nexus-api-gw
  useHttps: false
  tainted: false
  api_gateway:
    pub_key: ""
    cert: ""
  cronApiVersion: "batch/v1"
  resources: {}
  proxy:
    loadbalancer: false

replicaCount: 1

imagePullSecrets: ""
image:
  registry: registry-rs.edgeorchestration.intel.com/edge-orch
  repository: common/nexus-api-gw
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: api-gw-k8s-api-service-account


serviceArgs:
  serverAddress: "0.0.0.0:8080"
  baseRESTURL: "/"
  globalLogLevel: "info"
  echoDebug: false
  allowedCorsOrigins: "http://localhost:3000"
  traceURL: "mi-fluent-bit:4318"
  enableTracing: false
  enableAuditing: true
  enableAuth: true

# humanReadableLogs: "enable"
logging:
  level: error

podAnnotations: {}

podSecurityContext:
  seccompProfile:
    type: RuntimeDefault

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  runAsUser: 65534

service:
  type: ClusterIP
  port: 8082
  external:
    enabled: false
    nodePort: 30082
    port: 8082

metrics:
  enabled: false
  port: 8081
  external:
    nodePort: 30001

ingress:
  enabled: false
  className: "nginx"
  annotations: {}
  hosts:
    - host: edge-orchestrator.intel.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: tls-demo
      hosts:
        - edge-orchestrator.intel.com

resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

authz:
  disabled: false

oidc:
  name: "keycloak-api"
  oidc_env_name: "OIDC_SERVER_URL"
  oidc_server_url: "http://platform-keycloak.orch-platform.svc/realms/master"
  oidc_tls_insecure_skip_verify_env_name: "OIDC_TLS_INSECURE_SKIP_VERIFY"
  oidc_tls_insecure_skip_verify_value: "true"
  clients:
    # REST clients should set the "User-Agent" header to be the client name (e.g. for webhook-monitor)
    bypass:
      - common-metric-query-metrics
      - ecm-api
      - eim-config

# -- traefikReverseProxy defines params for external access to services in a cluster using Traefik reverse proxy.
traefikReverseProxy:
  host:
    grpc:
      name: "web-ui.cluster.onprem"

  # -- enabled is a switch to turn on/off the Traefik reverse proxy resource; Traefik MUST be deployed to gateway-system ns before enabling it here.
  enabled: false

  # -- middlewares enable/disable to let other services route to this layer
  middlewares:
    enabled: false
  # -- gatewayNamespace specifies namespace of Traefik and related resources (e.g. k8s secret or tls option).
  gatewayNamespace: orch-gateway
  # -- secretName is name of k8s secret containing TLS server cert.
  secretName: tls-orch
  # -- matchRoute defines routing rules (e.g. Host(`http.sample.com`))
  matchRoute:
  # -- tlsOption is the name of the Traefik option for handling TLS or mTLS connections.
  tlsOption: gateway-tls
