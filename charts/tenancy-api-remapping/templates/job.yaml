---

# SPDX-FileCopyrightText: 2025 Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0

{{- $registry := .Values.global.registry -}}
{{ if .Values.image.registry }}
  {{- $registry = .Values.image.registry -}}
{{ end }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "iam.fullname" . }}
  labels:
    {{- include "iam.labels" . | nindent 4 }}
  namespace: {{ default  .Release.Namespace .Values.global.namespace }}
spec:
  ttlSecondsAfterFinished: 600
  backoffLimit: 6
  template:
    metadata:
      annotations:
        "sidecar.istio.io/inject": "false"
    spec:
      activeDeadlineSeconds: 600
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ include "iam.serviceAccountName" . }}
      restartPolicy: Never
      initContainers:
      - name: job-wait-for-apimappingconfigs
        image: bitnami/kubectl
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        command: ["/bin/sh", "-c"]
        args:
        - |
          set -e
          echo "Waiting for CRD 'apimappingconfigs.apimappingconfig.edge-orchestrator.intel.com' to be available..."
          until kubectl get crd apimappingconfigs.apimappingconfig.edge-orchestrator.intel.com; do
            echo "CRD not found, waiting..."
            sleep 50
          done
          echo "CRD is available, Exiting init container..."
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}   
