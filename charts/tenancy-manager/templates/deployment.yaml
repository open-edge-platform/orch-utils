# SPDX-FileCopyrightText: 2025 Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0
---

---
{{- $registry := .Values.global.registry -}}
{{ if .Values.image.registry }}
  {{- $registry = .Values.image.registry -}}
{{ end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "iam.fullname" . }}
  labels:
    {{- include "iam.labels" . | nindent 4 }}
  namespace: {{ default  .Release.Namespace .Values.global.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "iam.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ include "iam.fullname" . }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if eq .Values.global.tainted true }}
      tolerations:
      - key: nexus
        operator: Equal
        value: api
      {{- end }}
      serviceAccountName: {{ include "iam.serviceAccountName" . }}
      initContainers:
      - name: wait-for-job
        image: bitnami/kubectl
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        command: ["/bin/sh", "-c"]
        args:
        - |
          set -e
          echo "admin.nexus.com CRD is available, waiting for CR..."
          echo "Waiting for CRD 'orgs.org.edge-orchestrator.intel.com' to be available..."
          until kubectl get orgs.org.edge-orchestrator.intel.com; do
            echo "edge-orchestrator.intel.com CRD not found, waiting..."
            sleep 10
          done
      containers:
      - name: {{ include "iam.fullname" . }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources:
            {{- toYaml .Values.resources | nindent 12 }}
        command:
        - /usr/local/bin/tenancy-manager
        - -serviceaccount
        env:
        - name: LOG_LEVEL
          value: {{ .Values.logging.level }}
        - name: NEXUS_LOG_LEVEL
          value: {{ .Values.logging.level }}
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
      volumes:
      - name: config-volume
        configMap:
          name: tenancy-config
      restartPolicy: Always
